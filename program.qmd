---
title: "Open Source Clinical Reporting summeR"
---

## Program 

## Abstract

### Reporting tables form a central component of regulatory filings in the pharmaceutical industry. 

By Gabe Becker

These tables are often complex, both in their conceptual structure and in the computations required to generate their individual cell values. Gabe will introduce the rtables package and show how visualization concepts, particularly faceting and the grammar of graphics, apply to tables generally and inform rtables' ability to succinctly declare and create complex structured tables such as those included in clinical trial filings. Gabe will also give a brief update of the work of the R Consortium's R Tables For Regulatory Submission (RTRS) working group.


### Apply next-generation tools in real study

By Liu Jia (Roche)


### NEST (Now and Future)

By Vincent Shen

Over the past 5 years, NEST has evolved from a small proof of concept to a well established project containing numerous R packages for streamlining analyses in clinical reporting and beyond. With ever-increasing engagement from internal and external users, NEST is well positioned to further influence and revolutionize how we generate insights for clinical research in the pharmaceutical industry. In this talk, we will share our development roadmap and highlight ideas and plans that we are actively pursuing for various products under the NEST umbrella. We will also share how open-sourcing and collaboration with other companies have benefited us so far in NEST, as well as our mid-to-long term vision of the project.

### ECD liveTFL: Experience and feedback on an application based on the teal framework

By Kaiping Yang (Beigene)

This paper introduces a web app called ECD liveTFL, which is developed based on the R-based teal framework. The app allows users to select different clinical trial studies and snapshot dates through UI to generate ADaM data for subsequent TFL analysis. The app consists of two parts: data processing and TFL platform. The data processing part is responsible for data preprocessing according to the user's selection, and the TFL platform part is responsible for reading the processed data to perform interactive TFL analysis. This paper mainly introduces the extensions that the app has compared to the teal framework, as well as the development experience and feedback.
Extensions
ECD liveTFL app has the following extensions compared to the teal framework:
•	Extension: The app extends the interactivity of the teal framework data preprocessing by splitting it into two parts, allowing users to generate different ADaM data according to their own choices.
•	Improvement: The app enhances the display function of listing and figure by transforming the existing module, and adds the function of selecting the population analysis set of TFL.
•	Customization: The app builds a configuration file database for different studies and combines it with UI, allowing users to dynamically modify the configuration file and feedback to the server side to generate interactive TFL, improving the customization level of TFL.
•	Quality: The app ensures the quality of TFL while maintaining its flexibility by using leader programmer to perform unified authority management.
Development experience
We also gained some experience in the development process, such as:
•	By building a configuration file database for different studies and combining it with UI, we achieved to let users dynamically modify the configuration file and feedback to the server side to generate interactive TFL, further enhancing the interactivity of TFL on more details. By using leader programmer to perform unified authority management, we ensured the quality of TFL while maintaining its flexibility.
•	By transforming the existing module, we enhanced the display function of listing and figure, and added the function of selecting the population analysis set of TFL.
Development feedback
We also received some feedback in the development process, mainly involving the following aspects:
•	tern package: Provide more space for customizing statistical functions and statistical result labels;
•	teal package: Add more layout frameworks and drop-down tabs functions;
•	teal.reporter package: Enhance PDF and PPT rendering effects and custom style functions, and add a default function to download all TFL content.


### Exploring the Advantages of R Admiral Package Over SAS Procedure for Programming ADaM Datasets

By Gao Shuang (Beigene)

R Admiral is an R package designed for programming ADaM datasets and streamlining the data preparation and analysis process. Compared to SAS procedure, R Admiral package has several advantages:
•	R Admiral is built on a modular approach where an ADaM dataset is constructed through a sequence of derivations. This feature allows for easy adjustments to the code by adding, removing, or modifying derivations.
•	R Admiral simplifies the data cleaning and tidying process, making data manipulation more flexible and easier to understand. In contrast, SAS uses programs like PROC SQL and PROC Transpose to achieve similar functions.
•	R Admiral offers more user-defined functions that can meet specific requirements.
 
While both R Admiral and SAS can generate datasets, their syntax, libraries, and costs may influence the decision on which tool to use for a particular task. This topic compares the differences between the procedures/functions provided by SAS and R Admiral for generating ADaM datasets.


### Transfer learning of Teal packages

By Zhou Kai (AZ)

Teal is an open source framework for building interactive clinical reporting Shiny APP. AZ China team decided to adopt it as a supplement tool for TLF generation a year ago. It turned out that this tool can be very useful to generate interactive TLF in a very short time in line with high quality. But meanwhile, we encountered a lot of challenges and problems. We'd like to share with you our experience from AZ programming perspective.

### Revolutionize Data Exploration with Teal

By Chendi (Roche)

{Teal} is an innovative open-source and scalable R-shiny based framework for interactive data analysis and exploration. It enables data scientists to streamline the creation of web applications, bringing data closer and faster to stakeholders, resulting in quicker insights and better-informed decisions. The framework's features, such as dynamic data filtering, code reproducibility and report generation, elevate the user experience and promote transparency in the data exploration process. With over 50 analysis templates and the ability to easily integrate customized modules for different analyses or data types, {teal} offers a comprehensive and extendable solution for data exploration. In this talk, we will introduce the {teal} framework, highlight its key features, and share how this has been adopted by hundreds of data scientists inside our organization. For more information about {teal}, please visit https://insightsengineering.github.io/teal/









